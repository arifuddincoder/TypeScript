{
	// ** 1. What are statics in TypeScript OOP? Explain with examples.
	//     Why doesn‚Äôt the `this` keyword work in this context?**
	//    üîπ **TypeScript OOP-‡¶è statics ‡¶ï‡ßÄ? ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡¶∏‡¶π ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡ßã‡•§
	//        ‡¶è‡¶á ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶ï‡ßá‡¶® `this` ‡¶ï‡ßÄ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ **

	class Counter {
		// static property ‚Üí ‡¶∏‡¶¨ instance ‡¶Æ‡¶ø‡¶≤‡ßá‡¶á ‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá
		private static count: number = 0;

		// ‚úÖ static method ‚Üí count ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã
		static increment(): number {
			return ++Counter.count;
		}

		// ‚úÖ static method ‚Üí count ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã
		static decrement(): number {
			return --Counter.count;
		}

		// ‚úÖ static method ‚Üí ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Æ‡¶æ‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ
		static getCount(): number {
			return Counter.count;
		}
	}

	// üîπ instance ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶®‡ßá‡¶á, ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø class ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
	console.log(Counter.getCount()); // 0 (‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá)
	console.log(Counter.increment()); // 1
	console.log(Counter.increment()); // 2
	console.log(Counter.decrement()); // 1
	console.log(Counter.getCount()); // 1
}
{
	//  **Static ‡¶ï‡ßÄ?
	// Static property ‡¶¨‡¶æ method ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ø‡¶æ class-‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶ï‡ßã‡¶®‡ßã instance (object) ‡¶§‡ßà‡¶∞‡¶ø ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá‡¶ì ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§
	// static ‡¶ï‡ßÄ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá define ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§
	// ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü ClassName.member ‡¶¶‡¶ø‡ßü‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶® Counter.getCount()‡•§
	// ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ utility ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®, ‡¶ó‡ßç‡¶≤‡ßã‡¶¨‡¶æ‡¶≤ ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶æ‡¶∞, ‡¶¨‡¶æ class-‡¶≤‡ßá‡¶≠‡ßá‡¶≤ data ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§
	// **‡¶ï‡ßá‡¶® this ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ?
	// Static method/property instance-‡¶è‡¶∞ ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡ßü‡•§ ‡¶§‡¶æ‡¶á static context-‡¶è this ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶ï‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂ ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡•§
	// ‡¶è‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø this.count ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ ‚Üí ‡¶¨‡¶∞‡¶Ç Counter.count ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶π‡ßü‡•§
}
