{
	// 1. **What are Getters and Setters? Explain with examples.**
	//    ЁЯФ╣ **Getter ржПржмржВ Setter ржХрзА? ржЙржжрж╛рж╣рж░ржгрж╕рж╣ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзЛред**

	class BankAccount {
		private _balance: number;

		constructor(initialBalance: number) {
			this._balance = initialBalance;
		}

		// тЬЕ Getter тЖТ property ржкрзЬрж╛рж░ ржЬржирзНржп
		get balance(): number {
			return this._balance;
		}

		// тЬЕ Setter тЖТ property ржирж┐рж░рж╛ржкржжрзЗ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЬржирзНржп
		set balance(amount: number) {
			if (amount < 0) {
				throw new Error("Balance cannot be negative!");
			}
			this._balance = amount;
		}
	}

	const account = new BankAccount(1000);

	console.log(account.balance); // Getter call тЖТ 1000

	account.balance = 1500; // Setter call
	console.log(account.balance); // 1500

	// account.balance = -500;    // тЭМ Error: Balance cannot be negative
}

{
	// Getter: A special method that allows you to read a private property as if it were a normal property.
	// Setter: A special method that allows you to safely update a private property, often with validation.
	// Use Case: Encapsulation тЖТ you donтАЩt expose the property directly, but control access through getter/setter.
}
{
	//   Getter: ржПржЯрж┐ ржПржоржи ржПржХржЯрж┐ method, ржпрзЗржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рждрзБржорж┐ ржХрзЛржирзЛ private property read ржХрж░рждрзЗ ржкрж╛рж░рзЛ, ржХрж┐ржирзНрждрзБ property-ржЯрж╛ рж╕рж░рж╛рж╕рж░рж┐ ржмрж╛ржЗрж░рзЗ ржерзЗржХрзЗ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ рж╣рзЯ ржирж╛ред
	// Setter: ржПржЯрж┐ ржПржоржи ржПржХржЯрж┐ method, ржпрзЗржЯрж┐ ржжрж┐рзЯрзЗ рждрзБржорж┐ private property-ржХрзЗ update/change ржХрж░рждрзЗ ржкрж╛рж░рзЛ, ржХрж┐ржирзНрждрзБ ржЪрж╛ржЗрж▓рзЗ ржнрзЗрждрж░рзЗ validation ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред
	// ржмрзНржпржмрж╣рж╛рж░: Encapsulation ржмржЬрж╛рзЯ рж░рж╛ржЦрждрзЗ Getter ржПржмржВ Setter ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
}
